name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          # Fallback to default token if SUBMODULES_TOKEN not set
          token: ${{ secrets.SUBMODULES_TOKEN || github.token }}

      - name: Sync submodules
        run: git submodule sync --recursive && git submodule update --init --recursive

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install site deps
        working-directory: istampit-web
        run: npm ci

      - name: Build site
        working-directory: istampit-web
        run: npm run build

  cli-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.SUBMODULES_TOKEN || github.token }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install CLI deps
        working-directory: istampit-cli
        run: |
          pip install --upgrade pip
          pip install .[test] || pip install .

      - name: (Optional) Install OpenTimestamps CLI
        working-directory: istampit-cli
        run: pip install opentimestamps-client
        continue-on-error: true

      - name: Run pytest
        working-directory: istampit-cli
        run: |
          if ! pytest -q; then
            echo "CLI tests failed"
            exit 1
          fi

  verify-release:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.SUBMODULES_TOKEN || github.token }}
      - name: Run release verification
        run: bash scripts/verify-release.sh || echo "(optional) verification failed" && exit 0
