name: Dependabot PR Triage

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  label-and-merge:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2

      - name: Apply dependency labels
        uses: actions/github-script@v7
        env:
          UPDATE_TYPE: ${{ steps.metadata.outputs.update-type }}
        with:
          script: |
            const baseLabels = ['dependencies'];
            const updateType = process.env.UPDATE_TYPE || '';
            if (updateType.includes('major')) {
              baseLabels.push('dependencies-major');
            } else if (updateType.includes('minor')) {
              baseLabels.push('dependencies-minor');
            } else if (updateType.includes('patch')) {
              baseLabels.push('dependencies-patch');
            } else if (updateType.includes('security')) {
              baseLabels.push('security');
            }
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: baseLabels,
            });

      - name: Auto-approve safe updates
        if: ${{ steps.metadata.outputs.update-type != 'version-update:semver-major' && steps.metadata.outputs.update-type != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'APPROVE',
              body: 'Auto-approved Dependabot update.',
            });

      - name: Enable auto-merge for non-major updates
        if: ${{ steps.metadata.outputs.update-type != 'version-update:semver-major' && steps.metadata.outputs.update-type != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const pullRequestId = context.payload.pull_request.node_id;
            await github.graphql(`mutation EnableAutoMerge($pullRequestId: ID!) {
              enablePullRequestAutoMerge(input: {
                pullRequestId: $pullRequestId,
                mergeMethod: SQUASH
              }) {
                pullRequest {
                  number
                }
              }
            }`, {
              pullRequestId,
            });
